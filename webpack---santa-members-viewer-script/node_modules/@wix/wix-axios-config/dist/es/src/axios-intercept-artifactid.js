function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}

function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
            ownKeys(Object(source), true).forEach(function(key) {
                _defineProperty(target, key, source[key]);
            });
        } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
            ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
        }
    }
    return target;
}

function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}

var getInterceptor = function getInterceptor(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        shouldAddArtifactIdOverride = _ref.shouldAddArtifactIdOverride;

    var requestSuccess = function requestSuccess(config) {
        var artifactId = process.env.ARTIFACT_ID;
        var shouldAddArtifactId = config.url.includes('/_api/') || config.url.includes('/api/') || shouldAddArtifactIdOverride;

        if (artifactId && shouldAddArtifactId) {
            var _objectSpread2;

            var headers = _objectSpread(_objectSpread({}, config.headers), {}, (_objectSpread2 = {}, _objectSpread2[artifactIdHeader] = artifactId, _objectSpread2));

            return _objectSpread(_objectSpread({}, config), {}, {
                headers: headers
            });
        }

        return config;
    };

    return {
        requestSuccess: requestSuccess
    };
};

export default {
    getInterceptor: getInterceptor
};
export var artifactIdHeader = 'X-Wix-Client-Artifact-Id';