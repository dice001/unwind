function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}

function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
            ownKeys(Object(source), true).forEach(function(key) {
                _defineProperty(target, key, source[key]);
            });
        } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
            ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
        }
    }
    return target;
}

function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}

import {
    createHeaders
} from '@wix/headers';
import {
    isReqToOriginDomain
} from './url-utils';
var API_PREFIX = '/_api/';

function getInterceptor(_ref) {
    var signedInstance = _ref.signedInstance;

    var requestSuccess = function requestSuccess(config) {
        var shouldAddWixHeaders = config.url.includes(API_PREFIX) || config.baseURL && config.baseURL.includes(API_PREFIX);
        var withSignedInstance = signedInstanceAllowed(signedInstance, config);
        var wixHeaders = shouldAddWixHeaders ? createHeaders({
            csrf: false,
            signedInstance: withSignedInstance
        }) : {};

        var headers = _objectSpread(_objectSpread({}, config.headers), wixHeaders);

        return _objectSpread(_objectSpread({}, config), {}, {
            headers: headers
        });
    };

    return {
        requestSuccess: requestSuccess
    };
}

function signedInstanceAllowed(signedInstance, _ref2) {
    var url = _ref2.url,
        baseURL = _ref2.baseURL;
    return signedInstance && isReqToOriginDomain(url, baseURL) ? signedInstance : '';
}

export default {
    getInterceptor: getInterceptor
};