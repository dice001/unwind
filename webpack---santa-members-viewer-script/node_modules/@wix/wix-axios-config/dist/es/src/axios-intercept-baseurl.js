import {
    isRelativeUrl,
    extractOrigin,
    parseUrl,
    joinPath,
    escapeRegExp,
    getWindowLocationOrigin
} from './url-utils';

var isDispatcherUrl = function isDispatcherUrl(url) {
    return /_api/.test(url);
};

var requestSuccess = function requestSuccess(config) {
    var url = config.url,
        baseURL = config.baseURL;
    var parsedBaseUrl = parseUrl(baseURL);
    var baseUrlOrigin = isRelativeUrl(baseURL) ? getWindowLocationOrigin() : extractOrigin(parsedBaseUrl, true);
    var baseUrlWithoutOrigin = baseURL.replace(baseUrlOrigin, '');
    var baseUrlRegex = new RegExp('^' + escapeRegExp(baseURL));
    var relativeUrl = url.replace(baseUrlRegex, ''); // get the original relative path without baseURL

    if (!isRelativeUrl(relativeUrl)) {
        return config;
    }

    var finalUrl = isDispatcherUrl(url) ? joinPath(baseUrlOrigin, relativeUrl) : joinPath(baseUrlOrigin, baseUrlWithoutOrigin, relativeUrl);
    return Object.assign({}, config, {
        url: finalUrl
    });
};

export default {
    requestSuccess: requestSuccess
};