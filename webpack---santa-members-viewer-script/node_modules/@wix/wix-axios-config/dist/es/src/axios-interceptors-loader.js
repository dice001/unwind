var register = function register(axiosInstance, interceptor) {
    var interceptorIdsToUnregister = [];

    if (interceptor.requestSuccess || interceptor.requestError) {
        var interceptorId = axiosInstance.interceptors.request.use(interceptor.requestSuccess, interceptor.requestError);
        interceptorIdsToUnregister.push(interceptorId);
    }

    if (interceptor.responseSuccess || interceptor.responseError) {
        var _interceptorId = axiosInstance.interceptors.response.use(interceptor.responseSuccess, interceptor.responseError);

        interceptorIdsToUnregister.push(_interceptorId);
    }

    return function() {
        return interceptorIdsToUnregister.map(function(id) {
            return axiosInstance.interceptors.response.eject(id);
        });
    };
};

var load = function load(axiosInstance, interceptors) {
    if (interceptors === void 0) {
        interceptors = [];
    }

    var unregister = interceptors.map(function(interceptor) {
        return register(axiosInstance, interceptor);
    });
    return function() {
        return unregister.map(function(x) {
            return x();
        });
    };
};

var loadIfNeeded = function loadIfNeeded(axiosInstance, _ref) {
    var shouldLoadInterceptors = _ref.shouldLoadInterceptors,
        interceptors = _ref.interceptors;

    if (shouldLoadInterceptors) {
        return load(axiosInstance, interceptors);
    }

    return function() {};
};

export default {
    load: load,
    loadIfNeeded: loadIfNeeded
};